<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	
	<!-- 
		
		appender:전달된 로그를 어디에 출력할지 결정
		appender 종류: ConsoleAppender, JDBCAppender, FileAppender, RollingFileAppender
																	
		layout:로그를 어떤 형식으로 출력할 지 결정
			DateLayout, HTMLLayout, PatternLayout,SimpleLayout,XmLLayout
			
			%p : debug, info, warm, error, fatal 등의 priority 출력
			%m : 로그 내용 출력
			%d : 로그 이벤트가 발생한 시간 출력(프로그램 속도를 느리게 할 수도 있음)
				 포맷을 %d{HH:mm:ss,SSS}와	같은 형태로 사용하며 SimpleDateFormat에서 사용한 포맷팅과 같음
			%t : 로그 이벤트가 발생된 스레드 이름 출력
			%% : % 출력
			%n : 개행문자 출력
			%c : package(카테고리) 출력
			%c{n} : n(숫자)만큼의 package를 하단부터 역으로 출력
					카테고리가 a.b.c처럼 되어있다면 %c{2}는 b.c의미
			%c : 호출자의 클래스 명 출력
				 위처럼 숫자를 이용해 부분 출력 가능
			%F : 로그가 발생한 프로그램 파일 명 출력
			%l : 로그가 발생한 caller의 정보 출력
			%L : 로그가 발생한 caller의 라인 수 출력
			%M : 로그가 발생한 메소드 이름 출력
			%r : 어플리케이션 시작 이후부터 로그가 발생한 시점의 시간(milliseconds) 출력
																	
	 -->
	
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout"><!-- 어떤 형식으로 출력할 것인가?  --> 
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	<appender name="myConsole" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out"/>
		<layout class="org.apache.log4j.PatternLayout"><!-- 어떤 형식으로 출력할 것인가?  --> 
			<param name="ConversionPattern" value="%-5p:%c{1}.%M{%L} - %m%n"/>
		</layout>
	</appender>
	
	<appender name="myDailyRollingFile" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="/logs/member/login.log"/>
		<param name="Append" value="true"/>
		<!-- name=append: 이어 쓴다. 뒤에 글이 있으면 이어쓴다 true  -->
		<param name="encoding" value="UTF-8"/>
		<param name="DatePattern" value="'.'yyyyMMdd"></param>	
		<layout class="org.apache.log4j.PatternLayout">
			<param name="conversionPattern" value="%d{yy-MM-dd HH:mm:ss} [%p] %c{1} %M{%L} -%m%n"/>
		</layout>
	</appender>
	<appender name="sqlLogger" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %m%n"/>
		</layout>
	</appender>
	
	
	<!-- Application Loggers -->

	<!-- 
		등록된 로그들을 받아주는 역할!

		debug < info < warn < error < fatal
		
		값을 설정하면 나 자신보다 큰 요소들만 나온다
		value="info"로 설정할 경우 info 부터 info보다 큰 애들이 출력된다.
		
		fatal: 아주 심각한 에러 발생
		error: 어떤 요청 처리 중 문제 발생
		warn : 프로그램 실행에는 문제가 없지만 향후 시스템 에러의 원인이 될 수 있는 경고성 메세지
		info : 상태 변경과 같은 정보성 메세지
		debug: 개발 시 디버그 용도로 사용하는 메세지
		trace : 디버그 레벨이 너무 광범위한 것을 해결하기 위해 좀더 상세한 이벤트를 나타냄(ex 경로 추적)
		
	 -->
	<logger name="com.kh.spring" additivity="false">
	<!-- additivity=false 굳이 루트까지 가지 않는다. 2번 출력되지 않아!!   -->
	<!-- <level value="info" /> -->		
	<level value="debug"/>
	<appender-ref ref="console"/>
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>
	<logger name="com.kh.spring.member.controller.MemberController" additivity="false">
		<level value="debug"/>
		
		<!-- 콘솔 출력  -->
		<appender-ref ref="myConsole"/>
		
		<!-- 날짜별 파일 출력  -->
	<!-- 	<appender-ref ref="myDailyRollingFile"/> -->
	</logger>
	
	<logger name="com.kh.spring.common.LoginLogInterceptor" additivity="false">
		<level value="info"/>
		<appender-ref ref="myDailyRollingFile"/>
	</logger>
	
	
	<logger name="jdbc.sqlonly" additivity="false">
	
		<level value="info"/>
		<appender-ref ref="sqlLogger"/>
	</logger>
	
	<logger name="jdbc.resultsettable" additivity="false">
	<level value="info"/>
	<appender-ref ref="sqlLogger"/>
	
	</logger>
	<logger name="com.kg.spring.InterceptorTest" additivity="false">
		<level value="debug"/>
		<appender-ref ref="myConsole"/>
	</logger>
	<logger name="com.kh.spring.common" additivity="false">
		<level value="debug"/>
		<appender-ref ref="myConsole"/>
	</logger>
	
	
	
	
	
	
	
	<!-- Root Logger -->
	
	<!--  
		모든 자식 로그들의 출력이 이루어지는 곳(무조건 root를 거지게 되어있음)
	-->
	
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>
